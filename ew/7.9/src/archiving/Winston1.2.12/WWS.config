################################################################################
#                             WWS configuration file
################################################################################
#
# WWS (Winston Wave Server) is an Earthworm Wave Server emulator for presenting
# data from a Winston system to the outside world.  It implements the Wave 
# Server protocol as defined in the wave_serverV.c file in the Earthworm source
# distribution, with a few exceptions.  These exceptions are so this program
# accurately behaves like a Wave Server, emulating some, but not all, of its 
# bugs.  Due to buggy support in Earthworm Wave Server, *PIN commands are not 
# implemented in WWS.  The author knows of no programs that rely on *PIN 
# commands.
#
# This server program uses the Java NIO Asynchronous I/O system.  This system
# typically is run on a single thread.  However, because the server has to rely
# on the database and can end up waiting for it this program uses multiple
# threads; these threads are called 'handlers'.  There is a configuration
# variable below which specifies the number of handlers to use.  Each of these
# handlers has a connection to the database.  This variable can be tweaked
# depending on the expected server load.  However, I wouldn't suggest using
# a value much above 4 unless you do testing and are convinced you need more.
# Raising this value on a disk-bound system will further degrade performance.
# A server which sees a high number of either concurrent request for HTTP plots 
# or clients on slow links, and has the available resources required, may benefit 
# from raising this value. 
# 
# This configuration file is simply an unordered list of [key]=[value] pairs.
# The different keys for this file are listed below.
#
# Command-line usage:
#
# java gov.usgs.winston.server.WWS [options] [config file]
#
# Valid options are:
#  --noinput, -i       disables listening for keystrokes
#
# The [config file] parameter optionally specifies which WWS configuration file
# to use (if it doesn't start with '-').  Otherwise, the file 'WWS.config' in 
# the current directory is used.
#
# Type q<enter> in the WWS window to exit kill WWS.  Or, if running in --noinput
# or -i mode, then ctrl-c or kill the process the directly.
#
################################################################################
# key: winston.driver
# required, unique
# 'winston.driver' is the fully qualified class name for the database driver to 
# use to connect to Winston.  Most likely you'll never have to change
# this.
#
# example:
# winston.driver=com.mysql.jdbc.Driver
#
################################################################################
# key: winston.url
# required, unique
# 'winston.url' is the jdbc url to connect to the Winston.  You'll only have to 
# change this if the database server resides on a different computer than the
# Import program is running on.  Of course, you'll have to change the user name
# and password to whatever you have set up for your system.
#
# example:
# winston.url=jdbc:mysql://localhost/?user=winstonuser&password=winstonpass
#
################################################################################
# key: winston.prefix
# required, unique
# 'winston.prefix' is the prefix to all of the Winston databases.  Unless you
# already have databases starting with W_ or are running two separate Winstons
# in the same database you shouldn't need to change this. 
#
# example:
# winston.prefix=W
#
################################################################################
# key: wws.port
# required, unique
# 'wws.port' is the port to listen on.  The default port for Earthworm Wave 
# Servers is 16022
#
# example:
# port=16022
#
################################################################################
# key: wws.keepalive
# optional, unique
# 'wws.keepalive' is a boolean value (legal true values: '1' or 'true', 
# everything else is false) that specifies whether the SO_KEEPALIVE option 
# should be set on acepted connections. This may be helpful for systems behind 
# firewalls.
#
# example:
# keepalive=true
#
################################################################################
# key: wws.handlers
# required, unique
# 'wws.handlers' is the number of handlers.  See above for a discussion of 
# handlers.
#
# example:
# handlers=4
#
################################################################################
# key: wws.maxConnections
# required, unique
# 'wws.maxConnections' is the maximum number of connections to the WWS
# at the same time.  Specify 0 for unlimited.
#
# example:
# maxConnections=20
#
################################################################################
# key: wws.idleTime
# optional, unique
# 'wws.idleTime' is the length of time, in seconds, that a connection can 
# remain quiet before WWS will consider it idle
#
# example:
# idleTime=7200
#
################################################################################
# key: wws.allowHttp
# required, unique
# 'wws.allowHttp' is a boolean value (legal true values: '1' or 'true', 
# everything else is false) that specifies whether the WWS should respond to 
# HTTP GET requests.
#
# example:
# allowHttp=true
#
################################################################################
# key: wws.httpMaxSize
# optional, unique
# 'wws.httpMaxSize' is an integer value that specifies whether the maximum product 
#  of requested width and height WWS should respond to HTTP GET requests.
#
# example:
# httpMaxSize=1000000
#

################################################################################
# key: wws.maxDays
# required, unique
# 'wws.maxDays' is the maximum age of data, in days, that will be returned to a 
# client. If 0, all data will be available to fill client requests.
#
# The intent of this setting is to permit multiple WWS instances to feed from a
# single database while providing different retention policies.
# example:
# maxdays=0
#################################################################################
# key: wws.slowCommandTime
# unique
# 'wws.slowCommandTime' is the length of time, in milliseconds, a command can run 
#  before being logged as slow.
#
# example:
# slowCommandTime=1000
#
################################################################################
# key: log.name
# required, unique
# 'log.name' is the name of the ImportEW log.  Each log file will have
# a number appended to it.
#
# example:
# log.name=WWS.log
#
################################################################################
# key: log.numFiles
# required, unique
# 'log.numFiles' is the number of log files to rotate through.
#
# example:
# log.numFiles=10
#
################################################################################
# key: log.maxSize
# required, unique
# 'log.maxSize' is the maximum number of bytes for a single log file.
#
# example:
# log.maxSize=1000000
#
################################################################################

wws.addr=127.0.0.1
wws.port=16022
wws.keepalive=true
wws.handlers=4
wws.maxConnections=50
wws.idleTime=7200
wws.allowHttp=true
wws.httpMaxSize=10000000
wws.httpRefreshInterval=300
wws.maxDays=0
wws.slowCommandTime=15000
@include Winston.config
