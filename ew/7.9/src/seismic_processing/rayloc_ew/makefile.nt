
#
#   THIS FILE IS UNDER RCS - DO NOT MODIFY UNLESS YOU HAVE
#   CHECKED IT OUT USING THE COMMAND CHECKOUT.
#
#    $Id: makefile.nt 5693 2013-07-31 11:23:02Z quintiliani $
#
#    Revision history:
#     $Log$
#     Revision 1.5  2007/03/02 14:58:36  stefan
#     comments
#
#     Revision 1.4  2007/03/02 05:16:05  stefan
#     still not working but better than the dummy file that was there before
#
#     Revision 1.3  2006/11/21 23:04:51  stefan
#     GLOBALFLAGS for c compiler from ew_nt.cmd
#
#     Revision 1.2  2006/11/21 22:05:21  stefan
#     cl to $(CC) $(GLOBALFLAGS)  and include <ntwin32.mak>
#
#     Revision 1.1  2004/08/05 04:15:11  friberg
#     First commit of rayloc_ew in EW-CENTRAL CVS
#
#     Revision 1.2  2004/08/03 17:51:47  ilya
#     Finalizing the project: using EW globals
#
#     Revision 1.1.1.1  2004/06/22 21:12:06  ilya
#     initial import into CVS
#
#     Revision 1.1  2000/02/14 19:06:49  lucky
#     Initial revision
#
#
#

#    RAYLOC_EW IS NOT YET KNOWN TO WORK ON WINDOWS.
#    YOU'RE WELCOME TO TRY AND GET IT TO WORK BY TWEAKING THIS
#    MAKEFILE, BUT AT PRESENT IT 
#                    DOES NOT WORK!

#
!include <ntwin32.mak>

APP = rayloc_ew

B = $(EW_HOME)\$(EW_VERSION)\bin
L = $(EW_HOME)\$(EW_VERSION)\lib
I = $(EW_HOME)\$(EW_VERSION)\include\
FORTRAN = ifort /f77rtl

compflags= /c /W3 /MT /nologo /DUSE_LOGIT 
linkflags= /release /nologo

TARGET1=rayloc_test1
TARGET2=rayloc_test2
TARGET3=rayloc_test3

F_MAIN_SRC = raylocator.f
F_STUB_SRC = librayloc1.f
C_MAIN1_SRC    = rayloc_test1.c
C_MAIN2_SRC    = rayloc_test2.c

C_SRCS=  rayloc_stations.c  rayloc1.c \
   rayloc_unused_phases.c 

F_SRCS = distaz.f  input.f  libsun.f   \
   ellip.f   io_util.f     libtau.f  robust_util.f \
   hypo.f    output.f

RAYLOC_EW_OBJ = rayloc_ew_main.o rayloc_ew_config.o\
    $L\kom.o $L\getutil.o $L\time_ew.o $L\chron3.o $L\logit.o \
    $L\transport.o $L\sleep_ew.o $L\swap.o $L\earthworm_defs.o $L\global_msg.o $L\global_loc_rw.o \
    $L\rayloc_message_rw.o

C_OBJS    = $(C_SRCS:%.c=%.o)
F_OBJS    = $(F_SRCS:%.f=%.o)
F_STUB    = $(F_STUB_SRC:%.f=%.o)
C_MAIN1   = $(C_MAIN1_SRC:%.c=%.o)
C_MAIN2   = $(C_MAIN2_SRC:%.c=%.o)
F_MAIN    = $(F_MAIN_SRC:%.c=%.o)

PROGS = rayloc_ew #$(TARGET2) $(TARGET3) $(TARGET1) 

########################################################################
all: $(PROGS)
	cp rayloc_ew $B\

rayloc_ew: $(RAYLOC_EW_OBJ) $(F_OBJS) $(C_OBJS)  $(F_STUB)
	$(FORTRAN)  -o rayloc_ew $(RAYLOC_EW_OBJ) $(F_OBJS) $(C_OBJS)  $(F_STUB)

$(TARGET1):         $(F_OBJS) $(F_MAIN) 
        $(FORTRAN) -o $(TARGET1) $(F_OBJS) $(F_MAIN)

$(TARGET2):         $(F_OBJS) $(C_OBJS) $(C_MAIN1) $(F_STUB)
	$(FORTRAN) -o $(TARGET2) $(F_OBJS) $(C_OBJS) $(C_MAIN1) $(F_STUB) $L\kom.o

$(TARGET3):         $(F_OBJS) $(C_OBJS) $(C_MAIN2) $(F_STUB)
	$(FORTRAN) -o $(TARGET3) $(F_OBJS) $(C_OBJS) $(C_MAIN2) $(F_STUB) $L\kom.o



# Clean-up directives
clean:
	-del a.out core *.o *.obj *% *~

clean_bin:
	-del $B\pick_ew*
